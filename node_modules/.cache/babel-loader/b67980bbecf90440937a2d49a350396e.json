{"ast":null,"code":"var _jsxFileName = \"/home/nahid/Desktop/react/live-demo/src/components/AddItem.component.jsx\";\nimport React, { Component, createRef } from 'react';\nimport './styles/add-items.styles.css';\nimport ItemList from './ItemList.component';\n\nclass AddItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      error: ''\n    };\n    this.itemName = createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.itemName.current.value != '') {\n      const item = {\n        id: Date.now(),\n        name: this.itemName.current.value\n      };\n\n      if (this.checkDuplicate(this.state.items, this.itemName.current.value)) {\n        this.setState({\n          items: [...this.state.items, item]\n        });\n        this.itemName.current.value = '';\n        this.setState({\n          error: ''\n        });\n      } else {\n        this.setState({\n          error: 'Item already added !!'\n        });\n      }\n    } else {\n      this.setState({\n        error: 'Write an item name !!'\n      });\n    }\n  }\n\n  checkDuplicate(items, itemName) {\n    const exist = items.find(item => item.name == itemName);\n\n    if (exist) {\n      return false;\n    }\n\n    return true;\n  }\n\n  removeItem(item_index) {\n    const filtered_items = this.state.items.filter((item, index) => index != item_index);\n    this.setState({\n      items: filtered_items\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-item-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      method: \"post\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Add New Item \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.itemName,\n      placeholder: \"Item Name\",\n      name: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(ItemList, {\n      items: this.state.items,\n      removeItem: this.removeItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default AddItem;","map":{"version":3,"sources":["/home/nahid/Desktop/react/live-demo/src/components/AddItem.component.jsx"],"names":["React","Component","createRef","ItemList","AddItem","constructor","state","items","error","itemName","handleSubmit","bind","removeItem","e","preventDefault","current","value","item","id","Date","now","name","checkDuplicate","setState","exist","find","item_index","filtered_items","filter","index","render"],"mappings":"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","sourcesContent":["import React, { Component, createRef} from 'react'\nimport './styles/add-items.styles.css'\nimport ItemList from './ItemList.component'\n\nclass AddItem extends Component{\n    constructor()\n    {\n        super()\n        this.state={\n            items:[],\n            error:''\n        }\n\n        this.itemName=createRef()\n\n        this.handleSubmit=this.handleSubmit.bind(this)\n        this.removeItem=this.removeItem.bind(this)\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault()\n        if(this.itemName.current.value!='')\n        {\n            const item={\n                id:Date.now(),\n                name:this.itemName.current.value\n            }\n\n            if(this.checkDuplicate(this.state.items,this.itemName.current.value))\n            {\n                this.setState({items:[...this.state.items,item]})\n                this.itemName.current.value=''\n                this.setState({error:''})\n            }else\n            {\n                this.setState({error:'Item already added !!'}) \n            }\n        }else\n        {\n            this.setState({error:'Write an item name !!'})\n        }\n    }\n\n    checkDuplicate(items,itemName){\n        const exist=items.find(item=>item.name==itemName)\n        if(exist)\n        {\n            return false\n        }\n        return true\n    }\n\n\n    removeItem(item_index){\n        const filtered_items=this.state.items.filter((item,index)=>index!=item_index)\n        this.setState({\n            items:filtered_items\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"add-item-form\">\n                <form action=\"\" method=\"post\" onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"\">Add New Item </label>\n                    <span className=\"error-text\">{this.state.error}</span>\n                    <div className=\"form-items\">\n                        <input type=\"text\" ref={ this.itemName } placeholder=\"Item Name\" name=\"item\"/>\n                        <button type=\"submit\" className=\"submit-btn\">Add</button>\n                    </div>\n                </form>\n                <ItemList items={this.state.items} removeItem={this.removeItem}/>\n            </div>\n        )\n    }\n}\n\nexport default AddItem"]},"metadata":{},"sourceType":"module"}